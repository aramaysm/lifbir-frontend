{
  "root": true,
  "env": {
    "browser": true,
    "es6": true,
    "jest": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "prettier"],
  "extends": [
    "airbnb-typescript",
    "eslint:recommended",
    "plugin:react-hooks/recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "max-len": [
      "error",
      150,
      {
        "ignoreTrailingComments": true,
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreRegExpLiterals": true,
        "ignoreTemplateLiterals": true
      }
    ],

    // typescript-eslint overrides
    "@typescript-eslint/lines-between-class-members": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/comma-dangle": "off",
    "@typescript-eslint/no-unused-expressions": "off",
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/semi": "off",
    // TODO remove the 3 following rules after refactor
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/triple-slash-reference": "off",
    "react/prop-types": "off",
    "react/jsx-no-bind": "off",
    "jest/no-export": "off",
    "jest/expect-expect": "off",
    "no-nested-ternary": "off",
    "default-case": "off",
    "cypress": "off",

    // controlled with prettier
    "arrow-parens": "off",
    "function-paren-newline": "off",
    "react/jsx-curly-newline": "off",

    // disabled for condition && someFunc()
    "no-unused-expressions": "off",

    // backend developers like _, no need to transform data all the time
    "camelcase": "off",

    // just the formatting issues, prettier does all the job
    "react/jsx-indent": "off",
    "react/jsx-wrap-multilines": "off",
    "no-confusing-arrow": "off",
    "operator-linebreak": "off",
    "object-curly-newline": "off",
    "implicit-arrow-linebreak": "off",
    "spaced-comment": "off",
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "ignore"
      }
    ],

    // these are totally useless
    "no-underscore-dangle": "off",
    "class-methods-use-this": "off",
    "react/state-in-constructor": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-one-expression-per-line": "off",
    "react/static-property-placement": "off",
    "react/require-default-props": "off",
    "react/destructuring-assignment": "off",
    "react/sort-comp": "off",
    "react/no-danger": "off",
    "jsx-a11y/control-has-associated-label": "off",
    "jsx-a11y/mouse-events-have-key-events": "off",
    "import/prefer-default-export": "off",
    "import/no-unresolved": "off",

    // sometimes there is no alternative
    "react/no-array-index-key": "off",

    // does not matter for monorepo
    "import/no-extraneous-dependencies": "off",

    // rules are broken and provide falsy mistakes
    "jsx-a11y/label-has-for": "off",
    "jsx-a11y/anchor-is-valid": "off",

    // it does not spoil anything if used wisely
    "jsx-a11y/no-autofocus": "off",
    "prettier/prettier": "warn"
  },
  "overrides": [
    {
      "files": ["**/__tests__/**/*.[jt]s?(x)", "**/?(*.)+(spec|test).[jt]s?(x)"],
      "extends": ["plugin:jest/recommended"]
    }
  ]
}
